This bug is a race between uselib() and mmap()
The access to vma should be protected by mmap_sem, however, in uselib(), it is not protected when loading a library into memory.

Steps of triggering the bug:

1. Install Ubuntu 4.10 on Vmware workstation using the default configuration(1 cpu would be enough).
http://old-releases.ubuntu.com/releases/warty/
(If for some reason, the installation stuck during loading cdrom driver, change the configuration of cd-rom from scsi to ide)

2. After installation, modify /etc/apt/sources.list
uncomment all sources excluding the security ones and change all "archive.ubuntu.com" to "old-releases.ubuntu.com"

3. Modify the mouse configuration to be compatible with 2.4 kernel
[In gnome terminal]
sudo xf86cfg
click on the mouse icon -> configure mouse -> select /dev/psaux and Auto -> apply changes -> ok

3. run following command:
sudo apt-get update
sudo apt-get install gcc kernel-image-2.4.26-1-386 kernel-headers-2.4.26-1-386 kernel-source-2.4.26 libncurses5-dev

during installation enter "n" to perform the installation

4. copy the files:
scp the mmap.patch, mremap.patch, 744.c to your home folder

5. install the new kernel:
sudo passwd root
su
cd /usr/src
tar xvjf kernel-source-2.4.26.tar.bz2
cd kernel-source-2.4.26/mm
patch < /home/USER/mmap.patch
patch < /home/USER/mremap.patch
cd ..
cp /boot/config-2.4.26-1-386 .config
make menuconfig  (you don't need to change anything, just exit and save)
make all
make bzImage
make modules
make modules_install
cp arch/i386/boot/bzImage /boot/vmlinuz-2.4.26
cp System.map /boot/System.map-2.4.26
mkinitrd -o /boot/initrd.img-2.4.26 2.4.26

6. vim /boot/grub/menu.lst
add the following:
title	Ubuntu, Kernel 2.4.26
root	(hd0,0)
kernel	/boot/vmlinuz-2.4.26 root/dev/sda1 ro
initrd	/boot/initrd.img-2.4.26
savedefault
boot

7. reboot
select the self-built kernel ( you can choose it by default if you change the default option in menu.lst)

8. compile (as a normal user):
gcc -O0 -g -fomit-frame-pointer -I/usr/src/kernel-headers-2.4.26-1/include 744.c -o 744.exe
./744.exe

The system should receive tripple fault which is forced to reboot
Check the maps.* generated by the program
Then, try to increase sz to 10 * PAGE_SIZE @744.c:~600 and observe the tripple fault. You can also uncomment the while(1) clause and see the process maps in another terminal by
ps aux|grep 744.exe
cat /proc/[PID]/maps
The system() call in the script would directly lead to tripple fault because when it forks a process to check the process map, it also copys the vma structures which lead to tripple fault.
You can see the kernel debug information added in the patch @/var/log/debug

When tripple fault is generated, the console output the following:
memory.c:218 bad pmd 00001a3
