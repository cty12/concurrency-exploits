diff -ru '--exclude=.git' '--exclude=.svn' '--exclude=*.mk' '--exclude=*.Makefile' '--exclude=*.pyc' '--exclude=Makefile' tmp/src/base/file_util.h 6.0.472.58/src/base/file_util.h
--- tmp/src/base/file_util.h	2016-03-03 20:03:18.964198359 -0500
+++ 6.0.472.58/src/base/file_util.h	2016-02-17 23:44:14.843422793 -0500
@@ -17,6 +17,7 @@
 #endif
 #elif defined(OS_POSIX)
 #include <sys/stat.h>
+#include <unistd.h>
 #endif
 
 #include <stdio.h>
diff -ru '--exclude=.git' '--exclude=.svn' '--exclude=*.mk' '--exclude=*.Makefile' '--exclude=*.pyc' '--exclude=Makefile' tmp/src/base/logging.h 6.0.472.58/src/base/logging.h
--- tmp/src/base/logging.h	2016-03-03 20:03:18.748196254 -0500
+++ 6.0.472.58/src/base/logging.h	2016-02-18 02:20:53.130932101 -0500
@@ -325,6 +325,11 @@
   return MakeCheckOpStringIntInt(v1, v2, names);
 }
 
+template<>
+inline std::string* MakeCheckOpString<std::wstring, std::wstring>(const std::wstring& v1, const std::wstring& v2, const char* names) {
+  return new std::string;
+}
+
 // Helper macro for binary operators.
 // Don't use this macro directly in your code, use CHECK_EQ et al below.
 #define CHECK_OP(name, op, val1, val2)  \
diff -ru '--exclude=.git' '--exclude=.svn' '--exclude=*.mk' '--exclude=*.Makefile' '--exclude=*.pyc' '--exclude=Makefile' tmp/src/base/message_pump_libevent.cc 6.0.472.58/src/base/message_pump_libevent.cc
--- tmp/src/base/message_pump_libevent.cc	2016-03-03 20:03:18.988198593 -0500
+++ 6.0.472.58/src/base/message_pump_libevent.cc	2016-02-18 01:25:38.887195957 -0500
@@ -6,6 +6,7 @@
 
 #include <errno.h>
 #include <fcntl.h>
+#include <unistd.h>
 
 #include "base/auto_reset.h"
 #include "base/eintr_wrapper.h"
diff -ru '--exclude=.git' '--exclude=.svn' '--exclude=*.mk' '--exclude=*.Makefile' '--exclude=*.pyc' '--exclude=Makefile' tmp/src/base/platform_file_posix.cc 6.0.472.58/src/base/platform_file_posix.cc
--- tmp/src/base/platform_file_posix.cc	2016-03-03 20:03:18.744196216 -0500
+++ 6.0.472.58/src/base/platform_file_posix.cc	2016-02-18 01:24:29.682535686 -0500
@@ -7,6 +7,7 @@
 #include <fcntl.h>
 #include <errno.h>
 #include <sys/stat.h>
+#include <unistd.h>
 
 #include "base/file_path.h"
 #include "base/logging.h"
diff -ru '--exclude=.git' '--exclude=.svn' '--exclude=*.mk' '--exclude=*.Makefile' '--exclude=*.pyc' '--exclude=Makefile' tmp/src/base/time_posix.cc 6.0.472.58/src/base/time_posix.cc
--- tmp/src/base/time_posix.cc	2016-03-03 20:03:18.988198593 -0500
+++ 6.0.472.58/src/base/time_posix.cc	2016-02-18 01:28:47.088992867 -0500
@@ -145,8 +145,8 @@
 
 // TimeTicks ------------------------------------------------------------------
 // FreeBSD 6 has CLOCK_MONOLITHIC but defines _POSIX_MONOTONIC_CLOCK to -1.
-#if (defined(OS_POSIX) &&                                               \
-     defined(_POSIX_MONOTONIC_CLOCK) && _POSIX_MONOTONIC_CLOCK >= 0) || \
+#if (defined(OS_POSIX) /*&&                                               \
+     defined(_POSIX_MONOTONIC_CLOCK) && _POSIX_MONOTONIC_CLOCK >= 0*/) || \
      defined(OS_FREEBSD) || defined(OS_OPENBSD)
 
 // static
diff -ru '--exclude=.git' '--exclude=.svn' '--exclude=*.mk' '--exclude=*.Makefile' '--exclude=*.pyc' '--exclude=Makefile' tmp/src/chrome/browser/diagnostics/diagnostics_main.cc 6.0.472.58/src/chrome/browser/diagnostics/diagnostics_main.cc
--- tmp/src/chrome/browser/diagnostics/diagnostics_main.cc	2016-03-03 20:03:19.788206385 -0500
+++ 6.0.472.58/src/chrome/browser/diagnostics/diagnostics_main.cc	2016-02-18 00:00:29.816960776 -0500
@@ -4,11 +4,6 @@
 
 #include "chrome/browser/diagnostics/diagnostics_main.h"
 
-#if defined(OS_POSIX)
-#include <stdio.h>
-#include <unistd.h>
-#endif
-
 #include <iostream>
 
 #include "app/app_paths.h"
@@ -26,6 +21,11 @@
 #include "base/win_util.h"
 #endif
 
+#if defined(OS_POSIX)
+#include <stdio.h>
+#include <unistd.h>
+#endif
+
 namespace {
 // This is a minimalistic interface to wrap the platform console.  This will be
 // eventually replaced by a view that can be subclassed for each platform and
diff -ru '--exclude=.git' '--exclude=.svn' '--exclude=*.mk' '--exclude=*.Makefile' '--exclude=*.pyc' '--exclude=Makefile' tmp/src/chrome/browser/search_engines/template_url_prepopulate_data.h 6.0.472.58/src/chrome/browser/search_engines/template_url_prepopulate_data.h
--- tmp/src/chrome/browser/search_engines/template_url_prepopulate_data.h	2016-03-03 20:03:21.796225944 -0500
+++ 6.0.472.58/src/chrome/browser/search_engines/template_url_prepopulate_data.h	2016-02-18 00:16:53.046881784 -0500
@@ -65,7 +65,7 @@
 // provider.
 void GetPrepopulatedEngines(PrefService* prefs,
                             std::vector<TemplateURL*>* t_urls,
-                            size_t* default_search_provider_index);
+                            std::size_t* default_search_provider_index);
 
 }  // namespace TemplateURLPrepopulateData
 
diff -ru '--exclude=.git' '--exclude=.svn' '--exclude=*.mk' '--exclude=*.Makefile' '--exclude=*.pyc' '--exclude=Makefile' tmp/src/gfx/codec/jpeg_codec.h 6.0.472.58/src/gfx/codec/jpeg_codec.h
--- tmp/src/gfx/codec/jpeg_codec.h	2016-03-03 20:04:19.596788921 -0500
+++ 6.0.472.58/src/gfx/codec/jpeg_codec.h	2016-02-18 00:26:38.696797813 -0500
@@ -48,14 +48,14 @@
   // decoded data will be placed in *output with the dimensions in *w and *h
   // on success (returns true). This data will be written in the'format'
   // format. On failure, the values of these output variables is undefined.
-  static bool Decode(const unsigned char* input, size_t input_size,
+  static bool Decode(const unsigned char* input, std::size_t input_size,
                      ColorFormat format, std::vector<unsigned char>* output,
                      int* w, int* h);
 
   // Decodes the JPEG data contained in input of length input_size. If
   // successful, a SkBitmap is created and returned. It is up to the caller
   // to delete the returned bitmap.
-  static SkBitmap* Decode(const unsigned char* input, size_t input_size);
+  static SkBitmap* Decode(const unsigned char* input, std::size_t input_size);
 };
 
 }  // namespace gfx
diff -ru '--exclude=.git' '--exclude=.svn' '--exclude=*.mk' '--exclude=*.Makefile' '--exclude=*.pyc' '--exclude=Makefile' tmp/src/ipc/file_descriptor_set_posix.cc 6.0.472.58/src/ipc/file_descriptor_set_posix.cc
--- tmp/src/ipc/file_descriptor_set_posix.cc	2016-03-03 20:04:18.728780466 -0500
+++ 6.0.472.58/src/ipc/file_descriptor_set_posix.cc	2016-02-18 00:33:43.597012087 -0500
@@ -6,6 +6,7 @@
 
 #include <sys/types.h>
 #include <sys/stat.h>
+#include <unistd.h>
 
 #include "base/eintr_wrapper.h"
 #include "base/logging.h"
diff -ru '--exclude=.git' '--exclude=.svn' '--exclude=*.mk' '--exclude=*.Makefile' '--exclude=*.pyc' '--exclude=Makefile' tmp/src/net/base/ssl_config_service.h 6.0.472.58/src/net/base/ssl_config_service.h
--- tmp/src/net/base/ssl_config_service.h	2016-03-03 20:04:05.300649679 -0500
+++ 6.0.472.58/src/net/base/ssl_config_service.h	2016-02-18 00:19:37.664554375 -0500
@@ -121,10 +121,10 @@
   // True if we use False Start for SSL and TLS.
   static bool false_start_enabled();
 
- protected:
   // SetFlags sets the values of several flags based on global configuration.
   static void SetSSLConfigFlags(SSLConfig*);
 
+ protected:
   friend class base::RefCountedThreadSafe<SSLConfigService>;
 
   virtual ~SSLConfigService() {}
diff -ru '--exclude=.git' '--exclude=.svn' '--exclude=*.mk' '--exclude=*.Makefile' '--exclude=*.pyc' '--exclude=Makefile' tmp/src/net/base/x509_certificate_nss.cc 6.0.472.58/src/net/base/x509_certificate_nss.cc
--- tmp/src/net/base/x509_certificate_nss.cc	2016-03-03 20:04:05.276649446 -0500
+++ 6.0.472.58/src/net/base/x509_certificate_nss.cc	2016-02-18 00:31:55.403939315 -0500
@@ -216,7 +216,7 @@
   }
 }
 
-typedef char* (*CERTGetNameFunc)(CERTName* name);
+typedef char* (*CERTGetNameFunc)(const CERTName* name);
 
 void ParsePrincipal(CERTName* name,
                     CertPrincipal* principal) {
diff -ru '--exclude=.git' '--exclude=.svn' '--exclude=*.mk' '--exclude=*.Makefile' '--exclude=*.pyc' '--exclude=Makefile' tmp/src/sandbox/linux/seccomp/library.h 6.0.472.58/src/sandbox/linux/seccomp/library.h
--- tmp/src/sandbox/linux/seccomp/library.h	2016-03-03 20:04:17.372767260 -0500
+++ 6.0.472.58/src/sandbox/linux/seccomp/library.h	2016-02-18 02:14:37.227215290 -0500
@@ -11,6 +11,7 @@
 #include <set>
 #include <string>
 #include <string.h>
+#include <cstdio>
 #include <sys/mman.h>
 
 #include "maps.h"
diff -ru '--exclude=.git' '--exclude=.svn' '--exclude=*.mk' '--exclude=*.Makefile' '--exclude=*.pyc' '--exclude=Makefile' tmp/src/sandbox/linux/seccomp/sandbox.cc 6.0.472.58/src/sandbox/linux/seccomp/sandbox.cc
--- tmp/src/sandbox/linux/seccomp/sandbox.cc	2016-03-03 20:04:17.392767454 -0500
+++ 6.0.472.58/src/sandbox/linux/seccomp/sandbox.cc	2016-02-18 02:14:12.042966077 -0500
@@ -5,6 +5,7 @@
 #include "library.h"
 #include "sandbox_impl.h"
 #include "syscall_table.h"
+#include <cstdio>
 
 namespace playground {
 
diff -ru '--exclude=.git' '--exclude=.svn' '--exclude=*.mk' '--exclude=*.Makefile' '--exclude=*.pyc' '--exclude=Makefile' tmp/src/third_party/angle/src/compiler/glslang.l 6.0.472.58/src/third_party/angle/src/compiler/glslang.l
--- tmp/src/third_party/angle/src/compiler/glslang.l	2016-03-03 20:04:23.316825153 -0500
+++ 6.0.472.58/src/third_party/angle/src/compiler/glslang.l	2016-02-18 01:02:38.849894821 -0500
@@ -318,7 +318,7 @@
         return 0;
 }
 
-void yyerror(char *s) 
+void yyerror(void*, char *s) 
 {
     if (((TParseContext *)cpp->pC)->AfterEOF) {
         if (cpp->tokensBeforeEOF == 1) {
diff -ru '--exclude=.git' '--exclude=.svn' '--exclude=*.mk' '--exclude=*.Makefile' '--exclude=*.pyc' '--exclude=Makefile' tmp/src/third_party/angle/src/compiler/glslang.y 6.0.472.58/src/third_party/angle/src/compiler/glslang.y
--- tmp/src/third_party/angle/src/compiler/glslang.y	2016-03-03 20:04:23.320825191 -0500
+++ 6.0.472.58/src/third_party/angle/src/compiler/glslang.y	2016-02-18 01:14:37.052835795 -0500
@@ -8,6 +8,7 @@
  * This is bison grammar and production code for parsing the OpenGL 2.0 shading
  * languages.
  */
+%param {void* parseContextLocal}
 %{
 
 /* Based on:
@@ -34,11 +35,11 @@
 TODO(alokp): YYPARSE_PARAM_DECL is only here to support old bison.exe in
 compiler/tools. Remove it when we can exclusively use the newer version.
 */
-#define YYPARSE_PARAM_DECL void*
+/*#define YYPARSE_PARAM_DECL void**/
 #define parseContext ((TParseContext*)(parseContextLocal))
 #define YYLEX_PARAM parseContextLocal
-#define YY_DECL int yylex(YYSTYPE* pyylval, void* parseContextLocal)
-extern void yyerror(char*);
+/*#define YY_DECL int yylex(YYSTYPE* pyylval, void* parseContextLocal)*/
+extern void yyerror(void*, char*);
 
 #define FRAG_VERT_ONLY(S, L) {                                                  \
     if (parseContext->language != EShLangFragment &&                             \
diff -ru '--exclude=.git' '--exclude=.svn' '--exclude=*.mk' '--exclude=*.Makefile' '--exclude=*.pyc' '--exclude=Makefile' tmp/src/third_party/libjingle/source/talk/base/sigslot.h 6.0.472.58/src/third_party/libjingle/source/talk/base/sigslot.h
--- tmp/src/third_party/libjingle/source/talk/base/sigslot.h	2016-03-03 20:04:24.424835943 -0500
+++ 6.0.472.58/src/third_party/libjingle/source/talk/base/sigslot.h	2016-02-18 00:34:46.397634748 -0500
@@ -80,7 +80,7 @@
 
 #include <set>
 #include <list>
-
+#include <cstdlib>
 // On our copy of sigslot.h, we force single threading
 #define SIGSLOT_PURE_ISO
 
diff -ru '--exclude=.git' '--exclude=.svn' '--exclude=*.mk' '--exclude=*.Makefile' '--exclude=*.pyc' '--exclude=Makefile' tmp/src/third_party/ots/src/os2.cc 6.0.472.58/src/third_party/ots/src/os2.cc
--- tmp/src/third_party/ots/src/os2.cc	2016-03-03 20:04:23.736829242 -0500
+++ 6.0.472.58/src/third_party/ots/src/os2.cc	2016-02-18 01:54:20.023547887 -0500
@@ -165,7 +165,7 @@
     return true;
   }
 
-  if (length < offsetof(OpenTypeOS2, code_page_range_2)) {
+  if (length < __builtin_offsetof(OpenTypeOS2, code_page_range_2)) {
     OTS_WARNING("bad version number: %u", os2->version);
     // Some fonts (e.g., kredit1.ttf and quinquef.ttf) have weird version
     // numbers. Fix them.
@@ -183,7 +183,7 @@
     return true;
   }
 
-  if (length < offsetof(OpenTypeOS2, max_context)) {
+  if (length < __builtin_offsetof(OpenTypeOS2, max_context)) {
     OTS_WARNING("bad version number: %u", os2->version);
     // some Japanese fonts (e.g., mona.ttf) have weird version number.
     // fix them.
diff -ru '--exclude=.git' '--exclude=.svn' '--exclude=*.mk' '--exclude=*.Makefile' '--exclude=*.pyc' '--exclude=Makefile' tmp/src/third_party/skia/include/core/SkPreConfig.h 6.0.472.58/src/third_party/skia/include/core/SkPreConfig.h
--- tmp/src/third_party/skia/include/core/SkPreConfig.h	2016-03-03 20:04:25.120842722 -0500
+++ 6.0.472.58/src/third_party/skia/include/core/SkPreConfig.h	2016-02-18 00:29:34.370540596 -0500
@@ -55,7 +55,7 @@
 //////////////////////////////////////////////////////////////////////
 
 #if !defined(SK_RESTRICT)
-    #define SK_RESTRICT __restrict__
+    #define SK_RESTRICT /*__restrict__*/
 #endif
 
 //////////////////////////////////////////////////////////////////////
diff -ru '--exclude=.git' '--exclude=.svn' '--exclude=*.mk' '--exclude=*.Makefile' '--exclude=*.pyc' '--exclude=Makefile' tmp/src/third_party/skia/src/core/SkBitmap.cpp 6.0.472.58/src/third_party/skia/src/core/SkBitmap.cpp
--- tmp/src/third_party/skia/src/core/SkBitmap.cpp	2016-03-03 20:04:26.184853085 -0500
+++ 6.0.472.58/src/third_party/skia/src/core/SkBitmap.cpp	2016-02-18 00:25:52.256337001 -0500
@@ -1044,7 +1044,7 @@
 
 ///////////////////////////////////////////////////////////////////////////////
 
-static bool GetBitmapAlpha(const SkBitmap& src, uint8_t SK_RESTRICT alpha[],
+static bool GetBitmapAlpha(const SkBitmap& src, uint8_t* SK_RESTRICT alpha,
                            int alphaRowBytes) {
     SkASSERT(alpha != NULL);
     SkASSERT(alphaRowBytes >= src.width());
diff -ru '--exclude=.git' '--exclude=.svn' '--exclude=*.mk' '--exclude=*.Makefile' '--exclude=*.pyc' '--exclude=Makefile' tmp/src/third_party/tcmalloc/chromium/src/base/linuxthreads.cc 6.0.472.58/src/third_party/tcmalloc/chromium/src/base/linuxthreads.cc
--- tmp/src/third_party/tcmalloc/chromium/src/base/linuxthreads.cc	2016-03-03 20:04:09.308688718 -0500
+++ 6.0.472.58/src/third_party/tcmalloc/chromium/src/base/linuxthreads.cc	2016-02-18 00:13:50.981029293 -0500
@@ -309,7 +309,7 @@
   for (sig = 0; sig < sizeof(sync_signals)/sizeof(*sync_signals); sig++) {
     struct kernel_sigaction sa;
     memset(&sa, 0, sizeof(sa));
-    sa.sa_sigaction_ = SignalHandler;
+    *(void**)&sa.sa_sigaction_ = (void*)SignalHandler;
     sys_sigfillset(&sa.sa_mask);
     sa.sa_flags      = SA_ONSTACK|SA_SIGINFO|SA_RESETHAND;
     sys_sigaction(sync_signals[sig], &sa, (struct kernel_sigaction *)NULL);
diff -ru '--exclude=.git' '--exclude=.svn' '--exclude=*.mk' '--exclude=*.Makefile' '--exclude=*.pyc' '--exclude=Makefile' tmp/src/third_party/tcmalloc/chromium/src/base/stl_allocator.h 6.0.472.58/src/third_party/tcmalloc/chromium/src/base/stl_allocator.h
--- tmp/src/third_party/tcmalloc/chromium/src/base/stl_allocator.h	2016-03-03 20:04:09.304688677 -0500
+++ 6.0.472.58/src/third_party/tcmalloc/chromium/src/base/stl_allocator.h	2016-02-17 23:51:34.275624334 -0500
@@ -59,7 +59,7 @@
 class STL_Allocator {
  public:
   typedef size_t     size_type;
-  typedef ptrdiff_t  difference_type;
+  typedef std::ptrdiff_t  difference_type;
   typedef T*         pointer;
   typedef const T*   const_pointer;
   typedef T&         reference;
diff -ru '--exclude=.git' '--exclude=.svn' '--exclude=*.mk' '--exclude=*.Makefile' '--exclude=*.pyc' '--exclude=Makefile' tmp/src/third_party/tcmalloc/chromium/src/base/vdso_support.cc 6.0.472.58/src/third_party/tcmalloc/chromium/src/base/vdso_support.cc
--- tmp/src/third_party/tcmalloc/chromium/src/base/vdso_support.cc	2016-03-03 20:04:09.308688718 -0500
+++ 6.0.472.58/src/third_party/tcmalloc/chromium/src/base/vdso_support.cc	2016-02-17 23:52:05.563936295 -0500
@@ -261,7 +261,7 @@
     Init(0);
     return;
   }
-  ptrdiff_t relocation =
+  std::ptrdiff_t relocation =
       base_as_char - reinterpret_cast<const char *>(link_base_);
   ElfW(Dyn) *dynamic_entry =
       reinterpret_cast<ElfW(Dyn) *>(dynamic_program_header->p_vaddr +
diff -ru '--exclude=.git' '--exclude=.svn' '--exclude=*.mk' '--exclude=*.Makefile' '--exclude=*.pyc' '--exclude=Makefile' tmp/src/third_party/tcmalloc/chromium/src/symbolize.h 6.0.472.58/src/third_party/tcmalloc/chromium/src/symbolize.h
--- tmp/src/third_party/tcmalloc/chromium/src/symbolize.h	2016-03-03 20:04:09.256688212 -0500
+++ 6.0.472.58/src/third_party/tcmalloc/chromium/src/symbolize.h	2016-02-18 00:14:21.797343114 -0500
@@ -38,6 +38,7 @@
 #include <stdint.h>  // for uintptr_t
 #endif
 #include <map>
+#include <cstdlib>
 
 using std::map;
 
diff -ru '--exclude=.git' '--exclude=.svn' '--exclude=*.mk' '--exclude=*.Makefile' '--exclude=*.pyc' '--exclude=Makefile' tmp/src/third_party/tcmalloc/chromium/src/system-alloc.cc 6.0.472.58/src/third_party/tcmalloc/chromium/src/system-alloc.cc
--- tmp/src/third_party/tcmalloc/chromium/src/system-alloc.cc	2016-03-03 20:04:09.332688950 -0500
+++ 6.0.472.58/src/third_party/tcmalloc/chromium/src/system-alloc.cc	2016-02-18 00:23:31.810930044 -0500
@@ -166,7 +166,7 @@
 
   // sbrk will release memory if passed a negative number, so we do
   // a strict check here
-  if (static_cast<ptrdiff_t>(size + alignment) < 0) return NULL;
+  if (static_cast<std::ptrdiff_t>(size + alignment) < 0) return NULL;
 
   // This doesn't overflow because TCMalloc_SystemAlloc has already
   // tested for overflow at the alignment boundary.
diff -ru '--exclude=.git' '--exclude=.svn' '--exclude=*.mk' '--exclude=*.Makefile' '--exclude=*.pyc' '--exclude=Makefile' tmp/src/third_party/tcmalloc/chromium/src/tcmalloc.cc 6.0.472.58/src/third_party/tcmalloc/chromium/src/tcmalloc.cc
--- tmp/src/third_party/tcmalloc/chromium/src/tcmalloc.cc	2016-03-03 20:04:09.216687820 -0500
+++ 6.0.472.58/src/third_party/tcmalloc/chromium/src/tcmalloc.cc	2016-02-18 00:24:11.535332556 -0500
@@ -367,7 +367,7 @@
   return tc_malloc(size);
 }
 
-void* (*__malloc_hook)(
+void* (*volatile __malloc_hook)(
     size_t size, const void* caller) = tc_ptmalloc_malloc_hook;
 
 static void* tc_ptmalloc_realloc_hook(
@@ -375,14 +375,14 @@
   return tc_realloc(ptr, size);
 }
 
-void* (*__realloc_hook)(
+void* (*volatile __realloc_hook)(
     void* ptr, size_t size, const void* caller) = tc_ptmalloc_realloc_hook;
 
 static void tc_ptmalloc_free_hook(void* ptr, const void* caller) {
   tc_free(ptr);
 }
 
-void (*__free_hook)(void* ptr, const void* caller) = tc_ptmalloc_free_hook;
+void (*volatile __free_hook)(void* ptr, const void* caller) = tc_ptmalloc_free_hook;
 
 #endif
 
@@ -1562,5 +1562,5 @@
   MallocHook::InvokeNewHook(result, size);
   return result;
 }
-void *(*__memalign_hook)(size_t, size_t, const void *) = MemalignOverride;
+void *(*volatile __memalign_hook)(size_t, size_t, const void *) = MemalignOverride;
 #endif  // #ifndef TCMALLOC_FOR_DEBUGALLOCATION
diff -ru '--exclude=.git' '--exclude=.svn' '--exclude=*.mk' '--exclude=*.Makefile' '--exclude=*.pyc' '--exclude=Makefile' tmp/src/third_party/WebKit/WebCore/css/CSSGrammar.y 6.0.472.58/src/third_party/WebKit/WebCore/css/CSSGrammar.y
--- tmp/src/third_party/WebKit/WebCore/css/CSSGrammar.y	2016-03-03 20:04:46.597051887 -0500
+++ 6.0.472.58/src/third_party/WebKit/WebCore/css/CSSGrammar.y	2016-02-18 02:16:26.768298967 -0500
@@ -1,3 +1,4 @@
+%param { CSSParser* parser }
 %{
 
 /*
@@ -86,7 +87,7 @@
 
 %{
 
-static inline int cssyyerror(const char*)
+static inline int cssyyerror(CSSParser* parser, const char*)
 {
     return 1;
 }
diff -ru '--exclude=.git' '--exclude=.svn' '--exclude=*.mk' '--exclude=*.Makefile' '--exclude=*.pyc' '--exclude=Makefile' tmp/src/third_party/WebKit/WebCore/css/CSSParser.cpp 6.0.472.58/src/third_party/WebKit/WebCore/css/CSSParser.cpp
--- tmp/src/third_party/WebKit/WebCore/css/CSSParser.cpp	2016-03-03 20:04:46.601051927 -0500
+++ 6.0.472.58/src/third_party/WebKit/WebCore/css/CSSParser.cpp	2016-02-18 02:52:43.877430624 -0500
@@ -83,7 +83,7 @@
 extern int cssyydebug;
 #endif
 
-extern int cssyyparse(void* parser);
+extern int cssyyparse(WebCore::CSSParser* parser);
 
 using namespace std;
 using namespace WTF;
@@ -5471,7 +5471,7 @@
     nameValuePair += variableValue;
 
     setupParser("@-webkit-variables-decls{", nameValuePair, "} ");
-    cssyyparse(this);
+    ::cssyyparse(this);
     m_rule = 0;
 
     bool ok = false;
diff -ru '--exclude=.git' '--exclude=.svn' '--exclude=*.mk' '--exclude=*.Makefile' '--exclude=*.pyc' '--exclude=Makefile' tmp/src/third_party/WebKit/WebCore/xml/XPathGrammar.y 6.0.472.58/src/third_party/WebKit/WebCore/xml/XPathGrammar.y
--- tmp/src/third_party/WebKit/WebCore/xml/XPathGrammar.y	2016-03-03 20:04:46.885054693 -0500
+++ 6.0.472.58/src/third_party/WebKit/WebCore/xml/XPathGrammar.y	2016-02-18 02:13:36.754616832 -0500
@@ -24,7 +24,7 @@
  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  */
-
+%parse-param {void* parserParameter}
 %{
 
 #include "config.h"
@@ -73,7 +73,7 @@
 %{
 
 static int xpathyylex(YYSTYPE* yylval) { return Parser::current()->lex(yylval); }
-static void xpathyyerror(const char*) { }
+static void xpathyyerror(void*, const char*) { }
     
 %}
 
diff -ru '--exclude=.git' '--exclude=.svn' '--exclude=*.mk' '--exclude=*.Makefile' '--exclude=*.pyc' '--exclude=Makefile' tmp/src/third_party/WebKit/WebCore/xml/XPathParser.cpp 6.0.472.58/src/third_party/WebKit/WebCore/xml/XPathParser.cpp
--- tmp/src/third_party/WebKit/WebCore/xml/XPathParser.cpp	2016-03-03 20:04:46.897054810 -0500
+++ 6.0.472.58/src/third_party/WebKit/WebCore/xml/XPathParser.cpp	2016-02-18 02:58:39.573021959 -0500
@@ -475,7 +475,7 @@
     
     Parser* oldParser = currentParser;
     currentParser = this;
-    int parseError = xpathyyparse(this);
+    int parseError = ::xpathyyparse(this);
     currentParser = oldParser;
 
     if (parseError) {
